
class Solution
{
    //Function to find a continuous sub-array which adds up to a given number.
    static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
    //     // Your code here
    //     ArrayList<Integer> result = new ArrayList<>();
    //     for(int i =0; i<n; i++) {
    //         int subArraySum = 0;
    //         for(int j=i; j<n; j++) {
    //             subArraySum = subArraySum + arr[j];
    //             if(subArraySum>s) {
    //                 break;
    //             }
    //             else if(subArraySum==s) {
    //                 result.add(i+1);
    //                 result.add(j+1);
    //                 return result;
    //             }
    //         }
    //     }
    //     result.add(-1);
    //     return result;
    // }
     ArrayList<Integer> result = new ArrayList<>();
        int start = 0, end = 0, subArraySum = 0;

        while (end < n) {
            subArraySum += arr[end];

            while (subArraySum > s) {
                subArraySum -= arr[start];
                start++;
            }

            if (subArraySum == s && start<=end) {
                result.add(start + 1); // 1-based index
                result.add(end + 1);   // 1-based index
                return result;
            }

            end++;
        }

        result.add(-1);
        return result;
    }
}